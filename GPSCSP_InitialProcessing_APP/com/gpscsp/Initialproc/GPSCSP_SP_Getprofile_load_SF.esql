BROKER SCHEMA com.gpscsp.Initialproc
PATH com.eems.globalcache;
DECLARE NS1 NAMESPACE 'http://eems.gateway.uhc.com/getprofileinfo/';
DECLARE username EXTERNAL CHARACTER '' ;
DECLARE password EXTERNAL CHARACTER '' ;
DECLARE SourceProfileMap EXTERNAL CHAR '';
--DECLARE EmptyRule EXTERNAL CHAR '';

/* ----------------------------------------------------------
	* Subroutine Name : auditMessage(IN envVariables REFERENCE, IN transactionLevel CHARACTER, IN auditMessage CHARACTER,IN payloadFlag CHARACTER) 
	* Description :     Calling common framework audit procedure to populate the pre-requisite audit information 
	* Author Name : 	Debajit Paul
	* Date 		  : 	13 June, 2016
	-----------------------------------------------------------*/		
/*
	CREATE PROCEDURE auditLogCall(IN envVariables REFERENCE, IN logLevel CHARACTER,IN BusinessProcessID CHARACTER, IN transactionLevel CHARACTER, IN payloadFlag CHARACTER, IN auditMessage CHARACTER) BEGIN
		
		IF envVariables.Brk_LogSwitch = 'ON' THEN 
			CALL AuditLog(envVariables,logLevel,envVariables.Brk_LogLevel,transactionLevel, auditMessage ,BusinessProcessID,payloadFlag);
		END IF;
		
	END;
*/	
	

	/*Code changes to use local audit method instead of commonframework code */
	CREATE PROCEDURE auditLogCall_GetProf(IN envVariables REFERENCE, IN logLevel CHARACTER,IN BusinessProcessID CHARACTER,IN transactionLevel CHARACTER,
	IN payloadFlag CHARACTER, IN auditMessage CHARACTER) BEGIN
		IF envVariables.Brk_LogSwitch = 'ON' THEN 
			IF envVariables.Brk_LogLevel='DEBUG' 
				OR (envVariables.Brk_LogLevel='ERROR' AND logLevel='ERROR') 
					OR (envVariables.Brk_LogLevel='WARN' AND (logLevel='WARN' OR logLevel='ERROR') ) 
						OR (envVariables.Brk_LogLevel='INFO' AND (logLevel='INFO' OR logLevel='WARN' OR logLevel='ERROR')) THEN 
				SET envVariables.AuditData.TransactionLevel	 =  transactionLevel;
				SET envVariables.AuditData.AuditMessage		 =	auditMessage;
				SET envVariables.AuditData.uniqueID			 =  BusinessProcessID;
				SET envVariables.AuditData.Payload			 =  payloadFlag;
				SET envVariables.AuditData.AppLogLevel		 =  logLevel;
				SET envVariables.AuditData.loggerAppender    =  ApplicationLabel ;
				
				PROPAGATE TO LABEL 'AUDIT' DELETE NONE;
			END IF;
		END IF;
	END;
	
CREATE COMPUTE MODULE GPSCSP_SP_GetProfile_Load_SF_Compute
      CREATE FUNCTION Main() RETURNS BOOLEAN
      BEGIN
            --CALL CopyMessageHeaders();
            CALL CopyEntireMessage();
            SET OutputRoot = NULL;
            DECLARE envVariables REFERENCE TO Environment.Variables 	  ;
            CALL auditLogCall_GetProf(envVariables, 'INFO',envVariables.BusinessProcessID, 'LOADCUSTPROFILE:START','FALSE',
            'Customer Profile webservice calling start for | TransSetId :  '||envVariables.TransSetId);
            --Create SubmissionInfoRequest  Reference
            CREATE FIELD OutputRoot.XMLNSC.GetProfileInfoRequest;
            DECLARE refSIReq REFERENCE TO OutputRoot.XMLNSC.GetProfileInfoRequest;
           
            SET refSIReq.CustomerProfile.(XMLNSC.Attribute)transSetId         = envVariables.TransSetId;
            SET refSIReq.CustomerProfile.(XMLNSC.Attribute)fileReceiptDt      = '';
            SET refSIReq.CustomerProfile.(XMLNSC.Attribute)prflVerNbr         = '';
            SET refSIReq.CustomerProfile.(XMLNSC.Attribute)submId             = ''; 
            
            DECLARE ev REFERENCE TO Environment.variable; 
            CREATE LASTCHILD OF ev DOMAIN ('XMLNSC');
            SET  ev.XMLNSC                                                    = OutputRoot.XMLNSC;
            SET OutputRoot.XMLNSC										      = NULL;
            
            
            DECLARE wsse      NAMESPACE 'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd';
            DECLARE get       NAMESPACE 'http://eems.gateway.uhc.com/getprofileinfo/';
            DECLARE soapenv   NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
           
            DECLARE rOut REFERENCE TO OutputRoot;
            CREATE LASTCHILD OF OutputRoot AS rOut DOMAIN ('XMLNSC');
            --Create the SOAP Envelope
            CREATE FIELD rOut.soapenv:Envelope;
            DECLARE rSoapEnv REFERENCE TO rOut.soapenv:Envelope;
            SET rSoapEnv.(XMLNSC.NamespaceDecl)xmlns:"wsse"                        = wsse;
            SET rSoapEnv.(XMLNSC.NamespaceDecl)xmlns:"get"                         = get;
            SET rSoapEnv.(XMLNSC.NamespaceDecl)xmlns:"soapenv"                     = soapenv;  
 
            --Create the SOAP Header
            CREATE FIELD rSoapEnv.soapenv:Header;
            DECLARE rOutHdr REFERENCE TO rSoapEnv.soapenv:Header; 
            SET rOutHdr.wsse:Security.(XMLNSC.Attribute)soapenv:actor              = '';
            SET rOutHdr.wsse:Security.(XMLNSC.Attribute)soapenv:mustUnderstand     = '1';           
            SET rOutHdr.wsse:Security.wsse:UsernameToken.wsse:Username             = username;
            SET rOutHdr.wsse:Security.wsse:UsernameToken.wsse:Password             = password;
            
            --Create the SOAP Body
            CREATE FIELD rSoapEnv.soapenv:Body;
            DECLARE rOutBdy REFERENCE TO rSoapEnv.soapenv:Body;
            DECLARE cMsgDetail CHARACTER; 
            DECLARE bPayload BLOB '';
            SET bPayload            												= ASBITSTREAM(ev.XMLNSC ENCODING 273 CCSID 1208);
            SET cMsgDetail    														= CAST(bPayload AS CHARACTER CCSID 1208 ENCODING 273);
            SET rSoapEnv.soapenv:Body.NS1:GetProfileRequest.(XMLNSC.CDataValue)     = cMsgDetail;
            CALL auditLogCall_GetProf(envVariables, 'DEBUG',envVariables.BusinessProcessID, 'LOADCUSTPROFILE:REQ','FALSE',
            'Sending request for Webservice to get profile info for | TransSetId :  '||envVariables.TransSetId);
            RETURN TRUE;
      END;

      CREATE PROCEDURE CopyMessageHeaders() BEGIN
            DECLARE I INTEGER 1;
            DECLARE J INTEGER;
            SET J = CARDINALITY(InputRoot.*[]);
            WHILE I < J DO
                  SET OutputRoot.*[I] = InputRoot.*[I];
                  SET I = I + 1;
            END WHILE;
      END;

      CREATE PROCEDURE CopyEntireMessage() BEGIN
            SET OutputRoot = InputRoot;
      END;
      
--/*
-- *Calling AUDIT Message flow 
-- */	
--	CREATE PROCEDURE auditLogCall(IN TransactionLevel CHAR,IN Payload CHAR,IN AuditMessage CHAR) BEGIN
--		SET Environment.Variables.AuditData.TransactionLevel	 =  TransactionLevel;
--		SET Environment.Variables.AuditData.AuditMessage		 =	AuditMessage;
--		SET Environment.Variables.AuditData.Payload				 =  Payload;
--		PROPAGATE TO LABEL 'BE128_AUDIT' DELETE NONE;
--	END;
END MODULE;


CREATE COMPUTE MODULE GPSCSP_loadprofileinCache_Getprofile_SF_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyEntireMessage( );
		DECLARE envVariables REFERENCE TO Environment.Variables 	  ;
		DECLARE loadCustPro CHARACTER '' ;
		CALL auditLogCall_GetProf(envVariables, 'INFO',envVariables.BusinessProcessID, 'LOADCUSTPROFILE:RESP','FALSE',
		'Recived response from webservice for | TransSetId :  '||envVariables.TransSetId);
		         
     	DECLARE refSIRes REFERENCE TO InputRoot.SOAP.*:Body.getProfileInfoResponse;
     	IF envVariables.getProfReprIndi = 'Y' THEN
     		SET envVariables.getProfileInfoResponse = refSIRes;
     	END IF;
     	IF(refSIRes.RsltCd = '004') THEN
         	CALL auditLogCall_GetProf(envVariables, 'ERROR',envVariables.BusinessProcessID, 'WEBSERVICE:FAULT','FALSE','RsltCd is: 004 , Invalid GetProfile Info  Request ');
         	THROW USER EXCEPTION MESSAGE 4039 
			VALUES('WEBSERVICE RsltCd is: 004 , Invalid GetProfile Info  Request ');	
			
		ELSE
			IF EXISTS(refSIRes.Submitter.rulesConfigurationList[]) THEN
			  	DECLARE wholeMsgBlob BLOB ASBITSTREAM(OutputRoot.SOAP.*:Body.getProfileInfoResponse  ENCODING 273 CCSID 1208);
				DECLARE wholeMsgChar CHAR CAST(wholeMsgBlob AS CHARACTER CCSID 1208 ENCODING 273);
				SET loadCustPro = loadCustProfile(SourceProfileMap,Environment.Variables.TransSetId,wholeMsgChar);
			ELSE 
				THROW USER EXCEPTION MESSAGE 4040 
				VALUES('Empty Rule Set');	
			END IF;
		END IF;
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
--/*
-- *Calling AUDIT Message flow 
-- */	
--	CREATE PROCEDURE auditLogCall(IN TransactionLevel CHAR,IN Payload CHAR,IN AuditMessage CHAR) BEGIN
--		SET Environment.Variables.AuditData.TransactionLevel	 =  TransactionLevel;
--		SET Environment.Variables.AuditData.AuditMessage		 =	AuditMessage;
--		SET Environment.Variables.AuditData.Payload				 =  Payload;
--		PROPAGATE TO LABEL 'BE128_AUDIT' DELETE NONE;
--	END;
END MODULE;
